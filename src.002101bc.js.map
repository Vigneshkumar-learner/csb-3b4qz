{"version":3,"sources":["src/index.js"],"names":["console","log","canvas","document","querySelector","ctx","getContext","shakebtn","size","color","lineJoin","lineCap","lineWidth","width","height","x","Math","floor","random","y","draw","key","strokeStyle","beginPath","moveTo","lineTo","stroke","handlekey","e","includes","preventDefault","clearcanvas","classList","add","clearRect","addEventListener","remove","window"],"mappings":";AAAAA,QAAQC,IAAI,YACZ,IAAMC,EAASC,SAASC,cAAc,aAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAAWJ,SAASC,cAAc,UAClCI,EAAO,GACTC,EAAQ,EAGZJ,EAAIK,SAAW,QACfL,EAAIM,QAAU,QACdN,EAAIO,UAAY,GAEhB,IAAQC,EAAUX,EAAVW,MACAC,EAAWZ,EAAXY,OACRd,QAAQC,IAAIY,EAAOC,GAEnB,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAIH,KAAKC,MAAMD,KAAKE,SAAWJ,GAQnC,SAASM,EAAc,GAAPC,IAAAA,EAAAA,EAAAA,IAKNA,OAJRZ,GAAgB,GAChBJ,EAAIiB,YAAqBb,OAAAA,OAAAA,EAAzB,cACAJ,EAAIkB,YACJlB,EAAImB,OAAOT,EAAGI,GACNE,GACD,IAAA,UACHF,GAAQX,EACR,MACG,IAAA,YACHW,GAAQX,EACR,MACG,IAAA,YACHO,GAAQP,EACR,MACG,IAAA,aACHO,GAAQP,EAIZH,EAAIoB,OAAOV,EAAGI,GACdd,EAAIqB,SAGN,SAASC,EAAUC,GACbA,EAAEP,IAAIQ,SAAS,WACjBD,EAAEE,iBACFV,EAAK,CAAEC,IAAKO,EAAEP,OAIlB,SAASU,IACP7B,EAAO8B,UAAUC,IAAI,WACrB5B,EAAI6B,UAAU,EAAG,EAAGrB,EAAOC,GAC3BZ,EAAOiC,iBAAiB,eAAgB,WACtCjC,EAAO8B,UAAUI,OAAO,aAzC5B/B,EAAIiB,YAAqBb,OAAAA,OAAAA,EAAzB,cACAJ,EAAIkB,YACJlB,EAAImB,OAAOT,EAAGI,GACdd,EAAIoB,OAAOV,EAAGI,GACdd,EAAIqB,SAyCJW,OAAOF,iBAAiB,UAAWR,GAEnCpB,EAAS4B,iBAAiB,QAASJ","file":"src.002101bc.js","sourceRoot":"..","sourcesContent":["console.log(\"it works\");\nconst canvas = document.querySelector(\"#touch-me\");\nconst ctx = canvas.getContext(\"2d\");\nconst shakebtn = document.querySelector(\".shake\");\nconst size = 20;\nlet color = 0;\n\n//setup for canvas\nctx.lineJoin = \"round\";\nctx.lineCap = \"round\";\nctx.lineWidth = 10;\n\nconst { width } = canvas;\nconst { height } = canvas;\nconsole.log(width, height);\n\nlet x = Math.floor(Math.random() * width);\nlet y = Math.floor(Math.random() * height);\n\nctx.strokeStyle = `hsl(${color},100%,50%)`;\nctx.beginPath(); //starts\nctx.moveTo(x, y);\nctx.lineTo(x, y);\nctx.stroke();\n\nfunction draw({ key }) {\n  color = color + 10;\n  ctx.strokeStyle = `hsl(${color},100%,50%)`;\n  ctx.beginPath(); //starts\n  ctx.moveTo(x, y);\n  switch (key) {\n    case \"ArrowUp\":\n      y = y - size;\n      break;\n    case \"ArrowDown\":\n      y = y + size;\n      break;\n    case \"ArrowLeft\":\n      x = x - size;\n      break;\n    case \"ArrowRight\":\n      x = x + size;\n      break;\n    default:\n  }\n  ctx.lineTo(x, y);\n  ctx.stroke();\n}\n\nfunction handlekey(e) {\n  if (e.key.includes(\"Arrow\")) {\n    e.preventDefault();\n    draw({ key: e.key });\n  }\n}\n\nfunction clearcanvas() {\n  canvas.classList.add(\"buttons\");\n  ctx.clearRect(0, 0, width, height);\n  canvas.addEventListener(\"animationend\", function () {\n    canvas.classList.remove(\"buttons\");\n  });\n}\n\nwindow.addEventListener(\"keydown\", handlekey);\n\nshakebtn.addEventListener(\"click\", clearcanvas);\n"]}